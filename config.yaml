app:
    name: cloudbilling-api
    version: latest
    host: ngxconnect.in
    kubeContext: do-blr1-k8s-090420
    namespace: cloudbilling

config:
   deployment: 'enabled' 
   service: 'enabled'
   ingress: 'enabled'
   gateway: 'enabled'
   pullsecret: 'enabled'
   appSecret: 'enabled'
   dbSecret: 'enabled'
   virtualService: 'enabled'
   dockerSecret: 'enabled'
   applicationSecret: 'enabled'
   dockersecret: 'enabled'
   certIssuer: 'enabled'
   certificates: 'enabled'



ingress:
    class: istio
    hostBaseDomain: "{{ app.host }}"
    svcName: "{{ app.name }}"
    svcPort: 5000  
    svcPath: /
  
   
 


deployment:
    class: istio
    hostBaseDomain: "{{ app.host }}"
    svcName: "{{ app.name }}"
    svcPort: 5000  
    svcPath: /
    containerPorts: 
      - containerPort: 4000
        protocol: TCP
        name: http
      - containerPort: 4001
        protocol: TCP
        name: http-1 
    env:
      - name: DBSTRING
        valueFrom:
          secretKeyRef:
             name: "{{ app.name }}-dbstring"
             key: dbstring     


    container:
        name: nbpcloudservices
        registry: registry.gitlab.com/vinay.hpatil/
        tag: 0.0.2
        pullPolicy: IfNotPresent
        livenessprobe: no 


virtualService:
   destination:
      - path: /api/v1/business
        port: 3001
        host: abc.com
      - path: /api/v1/outlet
        port: 3011
        host: abc.com
     

gateway:
    domain: ngxconnect.in
    port: 80
    portname: http
    protocol: HTTP




db_secret:
     tokenFileSymLink:  "{{ app.name }}.dbstring"
     tokenFile: "~/.config/{{ app.name }}/.dbstring"

doc_reg_secret:
     tokenFileSymLink:   "{{ app.name }}.doc-reg-secret"
     tokenFile: "~/.config/{{ app.name }}/.doc-reg-secret"
    



cert_manager:
    issuer: certmanager-dns
    email: vinay.hpatil@gmail.com
    server:  https://acme-staging-v02.api.letsencrypt.org/directory
    tokenFile: "~/.config/{{ app.name }}/.cert-manager-dns-token"
    tokenFileSymLink: "{{ app.name }}/.cert-dns-token"

certificate: 
    issuer: letsencrypt
    type: staging #! emum { staging , prod}
    #name: cert-todo
    name: "{{ app.name }}"
    app: "{{ app.name }}"
    class: istio
    hostBaseDomain: "{{ app.host }}"
    namespace: istio-system
  
  
